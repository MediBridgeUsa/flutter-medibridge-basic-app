rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    // Checks if the user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Checks if the user has the 'admin' role.
    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'admin';
    }

    // Checks if the user has the 'user' role.
    function isUser() {
      return isAuthenticated() && request.auth.token.role == 'user';
    }
    
    // Checks if the incoming data for a user profile is valid.
    function hasValidUserFields() {
      let data = request.resource.data;
      return data.email is string &&
             data.displayName is string &&
             data.createdAt is timestamp &&
             data.role is string && (data.role == 'admin' || data.role == 'user');
    }

    // --- Rule Definitions ---

    // Admins can read/write all user documents.
    // Users can only read/update their own document.
    match /users/{uid} {
      allow read: if isAdmin() || (isUser() && request.auth.uid == uid);
      allow create: if hasValidUserFields(); // Allow user creation during sign-up
      allow update: if (isAdmin() && hasValidUserFields()) || (isUser() && request.auth.uid == uid);
      allow delete: if isAdmin();
    }

    // Only admins can read, create, update, or delete roles.
    match /roles/{roleId} {
      allow read, write: if isAdmin();
    }
    
    // Modules can be read by any authenticated user, but only written by admins.
    match /modules/{moduleKey} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Audit logs can only be created by the system (implicitly through cloud functions)
    // and can only be read by admins.
    match /audit_logs/{logId} {
      allow read: if isAdmin();
      allow write: if false; // Prevent client-side writes
    }
    
    // Add rules for other collections as needed, for example:
    // match /patients/{patientId} {
    //   allow read, write: if isAuthenticated(); // Or more specific rules
    // }
  }
}
